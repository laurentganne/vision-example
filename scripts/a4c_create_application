#!/bin/bash

#
# a4c_create_application - creates an application from a topology template
#

a4cURL="http://localhost:8088"
locationName="google"
applicationName="Vision"
topologyTemplateName="VisionTopology"
topologyTemplateVersion="0.1.0"
usage() {
    echo ""
    echo "Usage:"
    echo "a4c_create_application [--a4c-url <Alien4Cloud URL>] [--name <Application Name>]"
    echo "                        [--template <Topology Template Name>] [--version <Topology Template Version>]"
    echo "   - default A4C URL                   : $a4cURL"
    echo "   - default Application Name          : $applicationName"
    echo "   - default Topology Template Name    : $topologyTemplateName"
    echo "   - default Topology Template Version : $topologyTemplateVersion"
    exit 1
}

POSITIONAL=()
while [[ $# -gt 0 ]]
do
key="$1"

case $key in
    -a|--a4c-url)
    a4cURL="$2"
    shift # past argument
    shift # past value
    ;;
    -n|--name)
    applicationName="$2"
    shift # past argument
    shift # past value
    ;;
    -t|--template)
    topologyTemplateName="$2"
    shift # past argument
    shift # past value
    ;;
    -v|--version)
    topologyTemplateVersion="$2"
    shift # past argument
    shift # past value
    ;;
    -h|--help)
    usage
    exit 0
    ;;
    *)    # unknown option
    POSITIONAL+=("$1") # save it in an array for later
    shift # past argument
    ;;
esac
done
set -- "${POSITIONAL[@]}" # restore positional parameters

# First, login and store the cookie
curl -d "username=admin&password=admin&submit=Login"  \
     --url  $a4cURL/login \
     --dump-header headers \
	 --silent \
     --cookie-jar cookies.a4c

# Create the applications
response=`curl --request POST \
         --url $a4cURL/rest/latest/applications \
         --header 'Content-Type: application/json' \
         --cookie cookies.a4c \
         --silent \
          --data "{\"name\": \"$applicationName\", \"archiveName\": \"$applicationName\", \"topologyTemplateVersionId\": \"$topologyTemplateName:$topologyTemplateVersion\"}"`

res=$?
if [ $res -ne 0 ]
then
    echo "Exiting on error creating application $applicationName : $response"
    exit 1
fi

echo "Application $applicationName created"