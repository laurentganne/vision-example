#!/bin/bash

#
# a4c_create_location - creates a Yorc orchestrator location
#
# Prerequisite:
#   The Yorc Alien4Cloud plugin has to be registered in Alien4Cloud
#   (see a4c_upload_plugin.bash)
#

a4cURL="http://localhost:8088"
locationName="google"
imageProject="centos-cloud"
imageFamily="centos-7"
computeZone="europe-west1-b"
userName="yorcuser"
usage() {
    echo ""
    echo "Usage:"
    echo "a4c_configure_on_demand_google_compute [--a4c-url <Alien4Cloud URL>] [--name <Location Name>]"
    echo "                                       [--image-project <Image Project>] [--image-family <Image Family>]"
    echo "                                       [--zone <Compute Zone>] [--user <User Name>]"
    echo "   - default A4C URL       : $a4cURL"
    echo "   - default Location Name : $locationName"
    echo "   - default Image Project : $imageProject"
    echo "   - default Image Family  : $imageFamily"
    echo "   - default Compute Zone  : $computeZone"
    echo "   - default User Name : $imageProject"
}

getJsonval() {
	jsonKey=$1
	jsonContent=$2
    temp=`echo "$jsonContent" | awk -F"[{,:}]" '{for(i=1;i<=NF;i++){if($i~/\042'$jsonKey'\042/){print $(i+1)}}}' | tr -d '"' | sed -n 1p`
    echo $temp
}

POSITIONAL=()
while [[ $# -gt 0 ]]
do
key="$1"

case $key in
    -a|--a4c-url)
    a4cURL="$2"
    shift # past argument
    shift # past value
    ;;
    -n|--name)
    locationName="$2"
    shift # past argument
    shift # past value
    ;;
    -h|--help)
    usage
    exit 0
    ;;
    *)    # unknown option
    POSITIONAL+=("$1") # save it in an array for later
    shift # past argument
    ;;
esac
done
set -- "${POSITIONAL[@]}" # restore positional parameters

# First, login and store the cookie
curl -d "username=admin&password=admin&submit=Login"  \
     --url  $a4cURL/login \
     --dump-header headers \
	 --silent \
     --cookie-jar cookies.a4c

# Get Orchestratror ID
res=`curl --request GET \
         --url $a4cURL/rest/latest/orchestrators?query=Yorc \
         --header 'Accept: application/json' \
         --silent \
         --cookie cookies.a4c`
yorcID=`getJsonval id $res`

if [ -z "$yorcID" ]
then
    echo "Exiting on error getting the Orchestrator ID"
    exit 1
fi

# Get the location ID
res=`curl --request GET \
         --url $a4cURL/rest/latest/orchestrators/$yorcID/locations?query=Yorc \
         --header 'Accept: application/json' \
         --silent \
         --cookie cookies.a4c`
locationID=`getJsonval id $res`

if [ -z "$locationID" ]
then
    echo "Exiting on error getting the ID for location $locationName"
    exit 1
fi


# Create a Google Compute on-demand resource
response=`curl --request POST \
     --url $a4cURL/rest/latest/orchestrators/$yorcID/locations/$locationID/resources  \
     --header 'Content-Type: application/json' \
     --cookie cookies.a4c \
     --silent \
     --data "{\"archiveName\": \"yorc-google-types\", \"archiveVersion\": \"1.0.0\", \"resourceName\": \"Compute\", \"resourceType\": \"yorc.nodes.google.Compute\"}"`
res=$?
if [ $res -ne 0 ]
then
    echo "Exiting on error creating an on-demand resource on location $locationName"
    exit 1
fi

echo "On-demand Compute resource created on location $locationName"

resourceID=`getJsonval id $response`
if [ -z "$resourceID" ]
then
    echo "Exiting on error getting the ID for on-demand compute resource on location $locationName"
    exit 1
fi

# Update properties
curl --request POST \
         --url $a4cURL/rest/latest/orchestrators/$yorcID/locations/$locationID/resources/$resourceID/template/properties \
         --header 'Content-Type: application/json' \
         --cookie cookies.a4c \
         --silent \
          --data "{\"propertyName\": \"image_project\", \"propertyValue\": \"$imageProject\"}" > /dev/null

res=$?
if [ $res -ne 0 ]
then
    echo "Exiting on error setting on-demand compute resource property image_project to $imageProject on location $locationName"
    exit 1
fi

curl --request POST \
         --url $a4cURL/rest/latest/orchestrators/$yorcID/locations/$locationID/resources/$resourceID/template/properties \
         --header 'Content-Type: application/json' \
         --cookie cookies.a4c \
         --silent \
          --data "{\"propertyName\": \"image_family\", \"propertyValue\": \"$imageFamily\"}" > /dev/null

res=$?
if [ $res -ne 0 ]
then
    echo "Exiting on error setting on-demand compute resource property image_family to $imageFamily on location $locationName"
    exit 1
fi

curl --request POST \
         --url $a4cURL/rest/latest/orchestrators/$yorcID/locations/$locationID/resources/$resourceID/template/properties \
         --header 'Content-Type: application/json' \
         --cookie cookies.a4c \
         --silent \
          --data "{\"propertyName\": \"zone\", \"propertyValue\": \"$computeZone\"}" > /dev/null

res=$?
if [ $res -ne 0 ]
then
    echo "Exiting on error setting on-demand compute resource property zone to $computeZone on location $locationName"
    exit 1
fi

# Update username in credentials
curl --request POST \
         --url $a4cURL/rest/latest/orchestrators/$yorcID/locations/$locationID/resources/$resourceID/template/capabilities/endpoint/properties \
         --header 'Content-Type: application/json' \
         --cookie cookies.a4c \
         --silent \
          --data "{\"propertyName\": \"credentials\", \"propertyValue\": {\"user\": \"$userName\"}}" > /dev/null

res=$?
if [ $res -ne 0 ]
then
    echo "Exiting on error setting on-demand compute resource user name on location $locationName"
    exit 1
fi

echo "On-demand Compute resource configured on location $locationName"
