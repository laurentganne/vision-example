#!/bin/bash

#
# a4c_create_location - creates a Yorc orchestrator location
#
# Prerequisite:
#   The Yorc Alien4Cloud plugin has to be registered in Alien4Cloud
#   (see a4c_upload_plugin.bash)
#

a4cURL="http://localhost:8088"
infraType="Google"
usage() {
    echo ""
    echo "Usage:"
    echo "a4c_create_location [--a4c-url <Alien4Cloud URL>]  [--type <Infrastructure Types >]"
    echo "   - default A4C URL             : $a4cURL"
    echo "   - default Infrastructure Type : $infraType"
    exit 1
}

getJsonval() {
	jsonKey=$1
	jsonContent=$2
    temp=`echo "$jsonContent" | awk -F"[{,:}]" '{for(i=1;i<=NF;i++){if($i~/\042'$jsonKey'\042/){print $(i+1)}}}' | tr -d '"' | sed -n 1p`
    echo $temp
}

POSITIONAL=()
while [[ $# -gt 0 ]]
do
key="$1"

case $key in
    -a|--a4c-url)
    a4cURL="$2"
    shift # past argument
    shift # past value
    ;;
    -t|--type)
    infraType="$2"
    shift # past argument
    shift # past value
    ;;
    -h|--help)
    usage
    exit 0
    ;;
    *)    # unknown option
    POSITIONAL+=("$1") # save it in an array for later
    shift # past argument
    ;;
esac
done
set -- "${POSITIONAL[@]}" # restore positional parameters

# First, login and store the cookie
curl -d "username=admin&password=admin&submit=Login"  \
     --url  $a4cURL/login \
     --dump-header headers \
	 --silent \
     --cookie-jar cookies.a4c

# Get Orchestratror ID
res=`curl --request GET \
         --url $a4cURL/rest/latest/orchestrators?query=Yorc \
         --header 'Accept: application/json' \
         --silent \
         --cookie cookies.a4c`
yorcID=`getJsonval id $res`

if [ -z "$yorcID" ]
then
    echo "Exiting on error getting the Orchestrator ID"
    exit 1
fi

# Create the location
curl --request POST \
     --url $a4cURL/rest/latest/orchestrators/$yorcID/locations  \
     --header 'Content-Type: application/json' \
     --cookie cookies.a4c \
     --silent \
     --data "{\"infrastructureType\": \"$infraType\", \"name\": \"$infraType\"}" > /dev/null

res=$?
if [ $res -ne 0 ]
then
    echo "Exiting on error creating a location of type $infraType"
    exit 1
else
    echo "Location $infraType created"
fi
